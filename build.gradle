buildscript {
  repositories {
    mavenCentral()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath 'org.xtext:xtext-gradle-plugin:2.0.8'
    classpath 'com.github.oehme.sobula:sobula:0.6.7'
    classpath 'com.netflix.nebula:nebula-project-plugin:4.0.1'
  }
}

allprojects {
  apply plugin: 'com.github.oehme.sobula.plugin-release'

  group = "org.xtext"
  bintray.pkg.name = "org.xtext:xtext-gradle-plugin"

  contacts {
    "xtext.team@gmail.com" {
      moniker "The Xtext team"
      roles "owner"
      github "xtext"
    }
  }

  bintray.user = "xtext-team"
  bintray.pkg.version.mavenCentralSync.user = "xtext.team"

  repositories {
    mavenCentral()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
}

subprojects {
  apply plugin: 'eclipse'
  apply plugin: 'java'

  sourceCompatibility = 1.8

  tasks.withType(JavaCompile) {
      options.encoding = 'UTF-8'
  }

  dependencies {
    compile gradleApi()
    compile 'com.google.guava:guava:27.1-jre'
    testCompile 'junit:junit:4.12'
    testCompile 'org.ow2.asm:asm:6.1.1'
  }
}

configure(subprojects.findAll{p-> !p.name.contains('protocol')}) {
  apply plugin: 'org.xtext.xtend'
  sourceJar.dependsOn generateXtext
}

apply from: "${rootDir}/gradle/xtend-bootstrap.gradle"

configure(subprojects.findAll{p-> p.name.contains('plugin')}){
  apply plugin: 'java-gradle-plugin'
  apply plugin: 'nebula.facet'

  jar {
    manifest {
      attributes("Implementation-Version": project.version)
    }
  }

  facets {
    integTest {
      parentSourceSet = 'test'
      testTaskName = 'minimumIntegrationTest'
    }
  }

  tasks.withType(Test) {
    def testkitDir = System.getenv("CI") ? gradle.gradleUserHomeDir : "$rootDir/testkit-dir"
    systemProperty 'gradle.project.version', version
    systemProperty 'org.gradle.testkit.dir', testkitDir
  }

  minimumIntegrationTest {
    dependsOn("install")
    reports.html.destination = file("$testReportDir/$name")
    reports.junitXml.destination = file("$testResultsDir/$name")
    systemProperty 'xtext.version', minimumXtextVersion
  }

  task latestIntegrationTest(type: Test) {
    classpath = minimumIntegrationTest.classpath
    testClassesDirs = minimumIntegrationTest.testClassesDirs
    dependsOn("install")
    systemProperty 'xtext.version', latestXtextVersion
    enabled = JavaVersion.current().java8Compatible
  }

  check.dependsOn(latestIntegrationTest)
}
